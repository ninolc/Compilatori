/*
Con l'ausilio di Flex scrivere un programma che preso in input un
file di testo ne produca un altro che risulti di dimensione minore,
attuando alcune strategie di compressione lossy ad ogni parola del
testo (si definisce parola una sequenza di lettere e cifre). In
particolare tale programma agisce sulle parole che cominciano per
consonante maiuscola nel seguente modo:
* ogni parola costituita solo da lettere maiuscole viene trasformata in una
parola in cui le occorrenze di vocali uguali consecutive vengono compresse
in un'unica vocale (uguale) minuscola seguita dal numero di occorrenze.

* ogni parola costituita da una unica consonante maiuscola seguita solo da
lettere minuscole viene trasformata secondo la seguente regola. Tutte le
occorrenze di vocali consecutive crescenti vengono trasformate nella
prima vocale (trasformata in maiuscolo) seguita dall’intero che
rappresenta il numero delle vocali soppresse. Per esempio, ‘eio’ viene
trasformata in ‘E2’.

* per tutte le parole che iniziano per consonante maiuscola seguita solo da
cifre, se tali cifre rappresentano un numero pari esso viene sostituito con
l’intero ottenuto dividendo per la massima potenza di 2 per cui il numero
è divisibile, concatenato con "b" e poi concatenato con l'esponente della
suddetta potenza. Per esempio A120 è sostituito con A15b3 poiché
120=2^3×15.

* per le parole costituite che cominciano per consonante maiuscola
seguita sia da lettere che da cifre: tutte le cifre consecutive vengono
sostituite con l'intero che rappresenta la somma di tali cifre. Le lettere
devono essere cambiate da maiuscolo in minuscolo e viceversa.

* tutte le altre parole devono essere lasciate invariate.

* Alla fine della scansione del file il programma deve
visualizzare il numero delle sostituzioni di parole effettuate
per ciascuna delle tipologie sopra elencate.
*/

%{
	int i=0,j=0,k=0,controllo=0,cont=0,num=0,e=0,somma=0,primo=0,secondo=0,terzo=0,quarto=0;
	char v[5]={'a','e','i','o','u'};
	int converter(const char c){return c - 48;}
%}

%option noyywrap

consonanti [B-DF-HJ-NP-TV-Z]
consonantimin [b-df-hj-np-tv-z]
vocali[aeiou]
separatore [^a-zA-Z0-9]
numeri 0|[1-9][0-9]*
alfanumerico[a-zA-Z0-9]
min[a-z]
mai[A-Z]
%x VOCALI VOCALICONS NUMERI ALFANUM
%%

{consonanti}/{mai}*		    {fprintf(yyout,"%s",yytext);BEGIN(VOCALI);primo++;}
{consonanti}/{min}*		    {fprintf(yyout,"%s",yytext);BEGIN(VOCALICONS);secondo++;}
{consonanti}/{numeri}		    {fprintf(yyout,"%s",yytext);BEGIN(NUMERI);terzo++;}
{consonanti}/{alfanumerico}*	    {fprintf(yyout,"%s",yytext);BEGIN(ALFANUM);quarto++;}

<VOCALI>{consonanti} fprintf(yyout,"%s",yytext);
<VOCALI>AA+|EE+|II+|OO+|UU+	{fprintf(yyout,"%c%d",tolower(yytext[0]),yyleng);}

<VOCALICONS>{consonantimin} fprintf(yyout,"%s",yytext);

<VOCALICONS>{vocali}*	{while(i<yyleng)
		             {
		               if(controllo==0)
                       {
			           for(j=0;yytext[i]!=v[j];j++);
			           fprintf(yyout,"%c",toupper(yytext[i]));
			           controllo=1;
                                   i++;
			           j++;
			         }
			       else
			         {
			           for(k=j;yytext[i]==v[k] && i<yyleng;k++)
                                      {
                                        cont++;
                                        i++;
                                       }
                                   if(cont>0)
					{
					 fprintf(yyout,"%d",cont);
					}
                                   controllo=0;
				   cont=0;
                                 }
		              }
			    i=0;
			    controllo=0;
                            cont=0;
		          }

<NUMERI>{numeri}	{num=atoi(yytext);
			   if(num%2==0)
			    {
			      for(e=0;num%2==0;e++)
                               {
			         num=num/2;
                                }
			      fprintf(yyout,"%db%d",num,e);
			     }
			   else fprintf(yyout,"%s",yytext);
                        }

<ALFANUM>[0-9]*	{for(i=0;i<yyleng;i++)
			  {
				num=converter(yytext[i]);
			    somma=somma+num;
			  }
                         fprintf(yyout,"%d",somma);
                        }
<ALFANUM>{min} fprintf(yyout,"%c",toupper(yytext[0]));

<ALFANUM>{mai} fprintf(yyout,"%c",tolower(yytext[0]));

<*>{separatore}	{fprintf(yyout,"%s",yytext);BEGIN(0);}

%%

int main()
{
	yylex();
	printf("\nMODIFICHE EFFETTUATE:\nTipo 1: %d\nTipo 2: %d\nTipo 3: %d\nTipo 4: %d\n",primo,secondo,terzo,quarto);
}

